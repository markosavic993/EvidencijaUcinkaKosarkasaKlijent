/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package forme;

import domen.Tim;
import forme.komponente.TblModelTim;
import java.awt.Dimension;
import java.awt.Toolkit;
import java.io.IOException;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import komunikacija.KlijentKomunikacija;
import transfer.TransferObjekatOdgovor;
import transfer.TransferObjekatZahtev;
import util.Konstante;

/**
 *
 * @author Marko
 */
public class FrmPrikazTima extends javax.swing.JDialog {

    TransferObjekatZahtev toZahtev = new TransferObjekatZahtev();
    TransferObjekatOdgovor toOdgovor = new TransferObjekatOdgovor();

    /**
     * Creates new form FrmPrikazTima
     */
    public FrmPrikazTima(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        popuniTabelu();
        pozicionirajFormu();
        jbtnIzmeni.setEnabled(false);
        jbtnObrisi.setEnabled(false);
        jbtnOK.setEnabled(false);
    }

    public FrmPrikazTima(java.awt.Frame parent, boolean modal, String naslov) {
        super(parent, modal);
        initComponents();
        jLabel1.setText(naslov);
        popuniTabelu();
        pozicionirajFormu();
        if (naslov.startsWith("Brisanje")) {
            jbtnIzmeni.setVisible(false);
        } else {
            jbtnObrisi.setVisible(false);
        }
        jbtnIzmeni.setEnabled(false);
        jbtnObrisi.setEnabled(false);
        jbtnOK.setEnabled(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jtblTimovi = new javax.swing.JTable();
        jbtnIzmeni = new javax.swing.JButton();
        jbtnObrisi = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jtxtKriterijumPretrage = new javax.swing.JTextField();
        jbtnOK = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        addWindowFocusListener(new java.awt.event.WindowFocusListener() {
            public void windowGainedFocus(java.awt.event.WindowEvent evt) {
                formWindowGainedFocus(evt);
            }
            public void windowLostFocus(java.awt.event.WindowEvent evt) {
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel1.setText("Pronadji tim");

        jtblTimovi.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jtblTimovi.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jtblTimoviMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jtblTimovi);

        jbtnIzmeni.setText("Izmeni");
        jbtnIzmeni.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnIzmeniActionPerformed(evt);
            }
        });

        jbtnObrisi.setText("Obri≈°i");
        jbtnObrisi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnObrisiActionPerformed(evt);
            }
        });

        jLabel2.setText("Unesite kriterijum pretrage:");

        jtxtKriterijumPretrage.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jtxtKriterijumPretrageKeyPressed(evt);
            }
        });

        jbtnOK.setText("OK");
        jbtnOK.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnOKActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 452, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(82, 82, 82))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(265, 265, 265)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(187, 187, 187)
                        .addComponent(jbtnIzmeni)
                        .addGap(133, 133, 133)
                        .addComponent(jbtnObrisi, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(39, 39, 39)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jtxtKriterijumPretrage, javax.swing.GroupLayout.PREFERRED_SIZE, 354, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jbtnOK)))
                .addContainerGap(34, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jtxtKriterijumPretrage, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jbtnOK))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 43, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 275, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jbtnIzmeni)
                    .addComponent(jbtnObrisi))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jbtnObrisiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnObrisiActionPerformed
        TblModelTim model = (TblModelTim) jtblTimovi.getModel();
        model.obrisiTim(jtblTimovi.getSelectedRow());
    }//GEN-LAST:event_jbtnObrisiActionPerformed

    private void jbtnIzmeniActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnIzmeniActionPerformed
        TblModelTim model = (TblModelTim) jtblTimovi.getModel();
        Tim t = model.getLt().get(jtblTimovi.getSelectedRow());
        FrmTimUnos forma = new FrmTimUnos(null, true, "Izmena tima", t);
        forma.setVisible(true);
    }//GEN-LAST:event_jbtnIzmeniActionPerformed

    private void formWindowGainedFocus(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowGainedFocus
        popuniTabelu();
        jtxtKriterijumPretrage.setText("");
        jbtnIzmeni.setEnabled(false);
        jbtnObrisi.setEnabled(false);
        jbtnOK.setEnabled(false);
    }//GEN-LAST:event_formWindowGainedFocus

    private void jbtnOKActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnOKActionPerformed
        String kriterijum = jtxtKriterijumPretrage.getText().trim();

        toZahtev.setOperacija(Konstante.VRATI_LISTU_TIMOVA_PREMA_KRITERIJUMU);
        toZahtev.setParametar(kriterijum);
        KlijentKomunikacija.getInstance().posaljiZahtev(toZahtev);
        try {
            toOdgovor = KlijentKomunikacija.getInstance().primiOdgovor();
        } catch (IOException | ClassNotFoundException ex) {
            Logger.getLogger(FrmPrikazTima.class.getName()).log(Level.SEVERE, null, ex);
        }
        if (toOdgovor.getIzuzetak() != null) {
            try {
                throw (Exception) toOdgovor.getIzuzetak();
            } catch (Exception ex) {
                Logger.getLogger(FrmLogovanje.class.getName()).log(Level.SEVERE, null, ex);
            }
        }

        List<Tim> listaTimova = (List<Tim>) toOdgovor.getRezultat();
        if (listaTimova.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Nema podataka za zadati kriterijum!");
            jtxtKriterijumPretrage.setText("");
            return;
        }

        TblModelTim tmt = new TblModelTim(listaTimova);
        jtblTimovi.setModel(tmt);
        jbtnOK.setEnabled(false);
        jtxtKriterijumPretrage.setText("");
        jbtnIzmeni.setEnabled(false);
        jbtnObrisi.setEnabled(false);
    }//GEN-LAST:event_jbtnOKActionPerformed

    private void jtblTimoviMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jtblTimoviMouseClicked
        jbtnIzmeni.setEnabled(jtblTimovi.getSelectedRow() > -1);
        jbtnObrisi.setEnabled(jtblTimovi.getSelectedRow() > -1);
    }//GEN-LAST:event_jtblTimoviMouseClicked

    private void jtxtKriterijumPretrageKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtxtKriterijumPretrageKeyPressed
        jbtnOK.setEnabled(true);
    }//GEN-LAST:event_jtxtKriterijumPretrageKeyPressed

    /**
     * @param args the command line arguments
     */
//    public static void main(String args[]) {
//        /* Set the Nimbus look and feel */
//        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
//        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
//         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
//         */
//        try {
//            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
//                if ("Nimbus".equals(info.getName())) {
//                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
//                    break;
//                }
//            }
//        } catch (ClassNotFoundException ex) {
//            java.util.logging.Logger.getLogger(FrmPrikazTima.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (InstantiationException ex) {
//            java.util.logging.Logger.getLogger(FrmPrikazTima.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (IllegalAccessException ex) {
//            java.util.logging.Logger.getLogger(FrmPrikazTima.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
//            java.util.logging.Logger.getLogger(FrmPrikazTima.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        }
//        //</editor-fold>
//        //</editor-fold>
//
//        /* Create and display the dialog */
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                FrmPrikazTima dialog = new FrmPrikazTima(new javax.swing.JFrame(), true);
//                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
//                    @Override
//                    public void windowClosing(java.awt.event.WindowEvent e) {
//                        System.exit(0);
//                    }
//                });
//                dialog.setVisible(true);
//            }
//        });
//    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton jbtnIzmeni;
    private javax.swing.JButton jbtnOK;
    private javax.swing.JButton jbtnObrisi;
    private javax.swing.JTable jtblTimovi;
    private javax.swing.JTextField jtxtKriterijumPretrage;
    // End of variables declaration//GEN-END:variables

    private void popuniTabelu() {
        toZahtev.setOperacija(Konstante.VRATI_TIMOVE);
        toZahtev.setParametar(null);
        KlijentKomunikacija.getInstance().posaljiZahtev(toZahtev);
        try {
            toOdgovor = KlijentKomunikacija.getInstance().primiOdgovor();
        } catch (IOException | ClassNotFoundException ex) {
            Logger.getLogger(FrmPrikazKosarkasa.class.getName()).log(Level.SEVERE, null, ex);
        }
        if (toOdgovor.getIzuzetak() != null) {
            try {
                throw (Exception) toOdgovor.getIzuzetak();
            } catch (Exception ex) {
                Logger.getLogger(FrmLogovanje.class.getName()).log(Level.SEVERE, null, ex);
            }
        }

        List<Tim> lt = (List<Tim>) toOdgovor.getRezultat();
        jtblTimovi.setModel(new TblModelTim(lt));
    }

    private void pozicionirajFormu() {
        Dimension dim = Toolkit.getDefaultToolkit().getScreenSize();
        this.setLocation(dim.width / 2 - this.getSize().width / 2, dim.height / 2 - this.getSize().height / 2);
    }
}
